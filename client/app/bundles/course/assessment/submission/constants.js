import mirrorCreator from 'mirror-creator';

export const formNames = mirrorCreator([
  'SUBMISSION',
]);

export const questionTypes = mirrorCreator([
  'MultipleChoice',
  'MultipleResponse',
  'Programming',
  'TextResponse',
  'FileUpload',
  'Scribing',
]);

export const workflowStates = {
  Attempting: 'attempting',
  Submitted: 'submitted',
  Graded: 'graded',
  Published: 'published',
};

export const TestCaseTypes = {
  Public: 'public_test',
  Private: 'private_test',
  Evaluation: 'evaluation_test',
};

export const scribingPopoverTypes = mirrorCreator([
  'TYPE',
  'DRAW',
  'LINE',
  'SHAPE',
  'LAYER',
]);

export const scribingToolColor = mirrorCreator([
  'TYPE',
  'DRAW',
  'LINE',
  'SHAPE_BORDER',
  'SHAPE_FILL',
]);

export const scribingToolThickness = mirrorCreator([
  'DRAW',
  'LINE',
  'SHAPE_BORDER',
]);

export const scribingToolLineStyle = mirrorCreator([
  'LINE',
  'SHAPE_BORDER',
]);

export const scribingTools = mirrorCreator([
  'TYPE',
  'DRAW',
  'LINE',
  'SHAPE',
  'SELECT',
  'PAN',
  'ZOOM_IN',
  'ZOOM_OUT',
  'DELETE',
]);

export const scribingShapes = mirrorCreator([
  'RECT',
  'ELLIPSE',
]);

const actionTypes = mirrorCreator([
  'FETCH_SUBMISSION_REQUEST', 'FETCH_SUBMISSION_SUCCESS', 'FETCH_SUBMISSION_FAILURE',
  'AUTOGRADE_SUBMISSION_REQUEST', 'AUTOGRADE_SUBMISSION_SUCCESS', 'AUTOGRADE_SUBMISSION_FAILURE',
  'SAVE_DRAFT_REQUEST', 'SAVE_DRAFT_SUCCESS', 'SAVE_DRAFT_FAILURE',
  'FINALISE_REQUEST', 'FINALISE_SUCCESS', 'FINALISE_FAILURE',
  'UNSUBMIT_REQUEST', 'UNSUBMIT_SUCCESS', 'UNSUBMIT_FAILURE',
  'AUTOGRADE_REQUEST', 'AUTOGRADE_SUCCESS', 'AUTOGRADE_FAILURE',
  'RESET_REQUEST', 'RESET_SUCCESS', 'RESET_FAILURE',
  'SAVE_GRADE_REQUEST', 'SAVE_GRADE_SUCCESS', 'SAVE_GRADE_FAILURE',
  'MARK_REQUEST', 'MARK_SUCCESS', 'MARK_FAILURE',
  'UNMARK_REQUEST', 'UNMARK_SUCCESS', 'UNMARK_FAILURE',
  'PUBLISH_REQUEST', 'PUBLISH_SUCCESS', 'PUBLISH_FAILURE',
  'CREATE_COMMENT_REQUEST', 'CREATE_COMMENT_SUCCESS', 'CREATE_COMMENT_FAILURE', 'CREATE_COMMENT_CHANGE',
  'UPDATE_COMMENT_REQUEST', 'UPDATE_COMMENT_SUCCESS', 'UPDATE_COMMENT_FAILURE', 'UPDATE_COMMENT_CHANGE',
  'DELETE_COMMENT_REQUEST', 'DELETE_COMMENT_SUCCESS', 'DELETE_COMMENT_FAILURE',
  'CREATE_ANNOTATION_REQUEST', 'CREATE_ANNOTATION_SUCCESS', 'CREATE_ANNOTATION_FAILURE', 'CREATE_ANNOTATION_CHANGE',
  'UPDATE_ANNOTATION_REQUEST', 'UPDATE_ANNOTATION_SUCCESS', 'UPDATE_ANNOTATION_FAILURE', 'UPDATE_ANNOTATION_CHANGE',
  'DELETE_ANNOTATION_REQUEST', 'DELETE_ANNOTATION_SUCCESS', 'DELETE_ANNOTATION_FAILURE',
  'DELETE_ATTACHMENT_REQUEST', 'DELETE_ATTACHMENT_SUCCESS', 'DELETE_ATTACHMENT_FAILURE',
  'UPDATE_GRADING', 'UPDATE_EXP', 'UPDATE_MULTIPLIER',
  'SET_NOTIFICATION',
  // Scribing answer action types
  'SET_CANVAS_LOADED',
  'FETCH_SCRIBING_QUESTION_REQUEST', 'FETCH_SCRIBING_QUESTION_SUCCESS','FETCH_SCRIBING_QUESTION_FAILURE',
  'FETCH_SCRIBING_ANSWER_REQUEST', 'FETCH_SCRIBING_ANSWER_SUCCESS', 'FETCH_SCRIBING_ANSWER_FAILURE',
  'UPDATE_SCRIBING_ANSWER_REQUEST', 'UPDATE_SCRIBING_ANSWER_SUCCESS', 'UPDATE_SCRIBING_ANSWER_FAILURE',
  'UPDATE_SCRIBING_ANSWER_IN_LOCAL', 'CLEAR_SAVING_STATUS',
]);

export default actionTypes;
