- auto_grading = answer.auto_grading ? answer.auto_grading.actable : nil
- submission = answer.submission
- assessment = submission.assessment
- test_cases_by_type = question.test_cases_by_type
- test_cases_and_results = get_test_cases_and_results(test_cases_by_type, auto_grading)

/ Test case results table
h3 = t('.test_cases')

- if !submission.attempting? && auto_grading.try(:job).try(:submitted?)
  div.alert.alert-warning
    => fa_icon 'exclamation'
    = t('.evaluation_warning')

- unless test_cases_and_results['public_test'].blank?
  = render partial: 'course/assessment/answer/programming/test_cases_of_type',
    locals: { test_cases_and_results: test_cases_and_results['public_test'],
              type_heading: t('.public'), is_grader: is_grader }

/ Display the private tests to students, only if the `show_private` option is enabled and
/ the submission is published.
- if is_grader || submission.published? && assessment.show_private?
  - if test_cases_and_results['private_test'].present?
    = render partial: 'course/assessment/answer/programming/test_cases_of_type',
      locals: { test_cases_and_results: test_cases_and_results['private_test'],
                type_heading: t('.private'), is_grader: is_grader }

/ Display the evaluation tests to students, only if the `show_evaluation` option is enabled and
/ the submission is published.
- if is_grader || submission.published? && assessment.show_evaluation?
  - if test_cases_and_results['evaluation_test'].present?
    = render partial: 'course/assessment/answer/programming/test_cases_of_type',
      locals: { test_cases_and_results: test_cases_and_results['evaluation_test'],
                type_heading: t('.evaluation'), is_grader: is_grader }

/ Test failure warning panel display
- failed_test_cases_by_type = get_failed_test_cases_by_type(test_cases_and_results)

- if failed_test_cases_by_type['public_test']
  = render partial: 'course/assessment/answer/programming/test_cases_warning_panels',
    locals: { test_case_and_result: failed_test_cases_by_type['public_test'],
              panel_heading: t('.failed_public_message') }
- elsif failed_test_cases_by_type['private_test']
  = render partial: 'course/assessment/answer/programming/test_cases_warning_panels',
    locals: { test_case_and_result: failed_test_cases_by_type['private_test'],
              panel_heading: t('.failed_private_message') }

- if is_grader && failed_test_cases_by_type['evaluation_test']
  = render partial: 'course/assessment/answer/programming/test_cases_warning_panels',
    locals: { test_case_and_result: failed_test_cases_by_type['evaluation_test'],
              panel_heading: t('.failed_evaluation_message') }
